if (model == null || model.id == null)
    fatal("You must select a model or some Archimate elements.");

load(__DIR__ + '/lib.ajs');
initRequire()
papa = require('papaparse');
tplPath ='C:\\Users\\XY56RE\\PycharmProjects\\p13596-architecture-model\\template\\'

modelImportCSV('test_')

function fileExists(filePath) {
    let FileHandler = Java.type("java.io.File");
    let fd = new FileHandler(filePath);
    return fd.exists();
}

function typeMap(type){
    m = type.match(/([A-Z])([a-z]*)([A-Z]*)([a-z]*)/)
    if (!!m)
        if (m.length === 5)
            return m[1].toLowerCase()+m[2]+'-'+m[3].toLowerCase()+m[4]
        else
            return m[1].toLowerCase()+m[2]
}

function modelImportCSV(prefixTag) {

    let filePath = tplPath + prefixTag + 'elements.csv'
    if(!fileExists(filePath)){
        console.log('Please provide a valid tag - '+filePath)
        return
    }
    let data = papa.parse(readFile(filePath), {header: true});
    data.data.forEach(r => {
        let id = r['ID']
        let type = typeMap(r['Type'])
        let name = r['Name']
        let doc = r['Documentation']
        let elem
        // console.log(id, type, name, doc)
        if (!!id && !!type && name) {
            elem = $('#' + id).first()
            if (!elem)
                if (type !== 'archimate-model')
                    elem = model.createElement(type, name)
            if (!!doc)
                elem.documentation = doc
        }
    })

    filePath = tplPath + prefixTag + 'properties.csv'
    if(fileExists(filePath)) {
        data = papa.parse(readFile(filePath), {header: true});
        data.data.forEach(r => {
            let id = r['ID']
            let key = r['Key']
            let value = r['Value']
            let elem
            console.log(id, key, value)
            if (!!id && !!key && !!value) {
                elem = $('#' + id).first()
                if (!!elem) {
                    console.log('+')
                    elem.prop(key, value)
                }
                else
                    console.log('Invalid ID ' + id)
            }
        })
    }
}
