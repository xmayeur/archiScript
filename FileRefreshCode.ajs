/*
 * Read back the file defined by its link reference, added by the FileAttachWithCode script
 * and update the code block with the actual content of the file
 */
 
console.clear() 
console.show()
load(__DIR__+"/lib/_fmt_lib.ajs")
load(__DIR__+'/lib/_util.ajs');

function escapeRegExp(stringToGoIntoTheRegex) {
    return stringToGoIntoTheRegex.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
}


var exportFolder = "files\\";

doc = $(selection).first().documentation
if (!!doc) {

	// get a file & prepare destination folder variables
	exportFile = getModelFileName(model); 
	relativeName = exportFile.split("\\");
	pathName = exportFile.substring(0, exportFile.length - relativeName[relativeName.length-1].length); 
	// in case the Archimate model is under git control, the model file is actually in the .git folder that we should skip
	var expr = /.git/
	if (expr.test(pathName)) {
		pathName = pathName.substring(0, pathName.length-5);
	}
	var filePath = window.promptOpenFile({ title: "Attach file", filterExtensions: [ "*.*" ], fileName: "" });
	
	if (!!filePath) {
		// open and move/replace file in destination folder
		mkdir(pathName + exportFolder ); // create the export folder unless it already exists
		exportFile = filePath;
		exportFile = exportFile.replace(/\s/g, '%20');
		exportFile = exportFile.replace(/\\/g, '/');

		name = filePath.split("\\");
		newFile = pathName+exportFolder+name[name.length-1];
		newName = newFile.replace(/\s/g, '%20');
		newName = newName.replace(/\\/g, '/');

		fileText = readFile(filePath)
		if (filePath != newFile) {
			$.fs.writeFile(newFile, fileText);
		}

		// find actual file link and code location in the documentation of the selected element
		fileLink = escapeRegExp('['+name[name.length-1]+']( file://'+newName+' )')
		
		pattern = new RegExp('('+fileLink+'\n*```)([\\s\\S]*?)```', 'gm')
		newText = '$1\n'+fileText+'\n```\n'
		doc = doc.replace(pattern, newText)
		$(selection).first().documentation = doc

	}
}
